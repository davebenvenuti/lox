package com.craftinginterpreters.lox

// THIS FILE IS AUTOGENERATED BY generate-ast, DO NOT EDIT!

sealed class Stmt {
    interface Visitor<R> {
        fun visitBlockStmt(block: Block): R
        fun visitExpressionStmt(expression: Expression): R
        fun visitPrintStmt(print: Print): R
        fun visitVarStmt(v: Var): R
    }

    data class Block(
        val statements : List<Stmt>
    ) : Stmt() {
        override fun <R> accept(visitor: Visitor<R>): R {
            return visitor.visitBlockStmt(this)
        }
    }
    
    data class Expression(
        val expression : Expr
    ) : Stmt() {
        override fun <R> accept(visitor: Visitor<R>): R {
            return visitor.visitExpressionStmt(this)
        }
    }
    
    data class Print(
        val expression : Expr
    ) : Stmt() {
        override fun <R> accept(visitor: Visitor<R>): R {
            return visitor.visitPrintStmt(this)
        }
    }
    
    data class Var(
        val name : Token,
        val initializer : Expr
    ) : Stmt() {
        override fun <R> accept(visitor: Visitor<R>): R {
            return visitor.visitVarStmt(this)
        }
    }
    

    abstract fun <R> accept(visitor: Visitor<R>): R
}
